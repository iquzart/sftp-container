name: Build and Push SFTP Images

on:
  # schedule:
  #   - cron: '0 10 * * 0'
  push:
    branches:
      - "**"
    tags:
      - "v*.*.*"
    paths-ignore:
      - ".github/**"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CONTAINER_IMAGE_REPO: "diquzart"
  CONTAINER_IMAGE_NAME: "sftp"
  CONTAINERFILE: "./Containerfile"

jobs:
  build-and-push:
    name: Build / Scan / Push
    runs-on: ubuntu-latest

    strategy:
      matrix:
        flavor: [debian, ubi]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set image tag
        id: set-image-tag
        run: |
          FLAVOR="${{ matrix.flavor }}"
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            echo "IMAGE_TAG=${{ github.ref_name }}-${FLAVOR}" >> $GITHUB_OUTPUT
          else
            COMMIT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
            echo "IMAGE_TAG=${COMMIT_SHA}-${FLAVOR}" >> $GITHUB_OUTPUT
          fi

      - name: Set metadata for the Container Image
        uses: docker/metadata-action@v4
        id: image_metadata
        with:
          images: ${{ env.CONTAINER_IMAGE_REPO }}/${{ env.CONTAINER_IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.set-image-tag.outputs.IMAGE_TAG }}

      - name: Login to Repository (Docker Hub)
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Container image
        run: |
          docker build \
            --tag ${{ steps.image_metadata.outputs.tags }} \
            --file ./sftp/${{ matrix.flavor }}/Containerfile \
            ./sftp/${{ matrix.flavor }}

      - name: Trivy Scan Container image
        uses: aquasecurity/trivy-action@master
        env:
          # TRIVY_SKIP_DB_UPDATE: true
          # TRIVY_SKIP_JAVA_DB_UPDATE: true
        with:
          image-ref: ${{ steps.image_metadata.outputs.tags }}
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL"

      - name: Push Container Image
        run: |
          docker push ${{ steps.image_metadata.outputs.tags }}
